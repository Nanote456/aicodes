min max                                                                                                                                                                                                                                 def minimax(position, depth, maximizing_player):
    if depth == 0 or isinstance(position, int):
        return position

    if maximizing_player:
        max_eval = float('-inf')
        for child in position:
            eval = minimax(child, depth - 1, False)
            max_eval = max(max_eval, eval)
        return max_eval
    else:
        min_eval = float('inf')
        for child in position:
            eval = minimax(child, depth - 1, True)
            min_eval = min(min_eval, eval)
        return min_eval

# Example: Game tree (nested lists represent moves)
# This tree goes 3 levels deep and ends in numeric values (scores)
game_tree = [
    [3, 5, 2],         # Option 1 for max
    [9, 1, 4],         # Option 2 for max
    [7, 6]             # Option 3 for max
]

# Run minimax (start with maximizing player at depth 2)
best_score = minimax(game_tree, 2, True)
print("Best score for maximizing player:", best_score)